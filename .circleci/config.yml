# Use the latest 2.1 version of CircleCI pipeline process engine.
# See: https://circleci.com/docs/2.0/configuration-reference
version: 2.1

# Orbs are reusable packages of CircleCI configuration that you may share across projects, enabling you to create encapsulated, parameterized commands, jobs, and executors that can be used across multiple projects.
# See: https://circleci.com/docs/2.0/orb-intro/
orbs:
  python: circleci/python@2.1.0
  codecov: codecov/codecov@3.2.3
  codacy: codacy/coverage-reporter@13.10.14
  deepsource: deepsource/test-coverage@1.1.0

# Define a job to be invoked later in a workflow.
# See: https://circleci.com/docs/2.0/configuration-reference/#jobs
jobs:
  unittests-python: # This is the name of the job, feel free to change it to better match what you're trying to do!
    parameters:
      python-version:
        type: string
    docker:
      - image: cimg/python:<< parameters.python-version >>
    steps:
      - checkout
      - run:
          name: Update poetry
          command: |
            poetry self update
      - python/install-packages:
          pkg-manager: poetry
      - run:
          name: Install test dependencies
          command: |
            poetry install --with test
      - run:
          name: Test code coverage
          command: |
            poetry run pytest
      - store_test_results:
          path: results.xml
      - codecov/upload:
          file: coverage.xml
          flags: unittests
      - codacy/send_report:
          coverage-reports: coverage.xml
          project-token: $CODACY_PROJECT_TOKEN
      - deepsource/report:
          coverage-file: coverage.xml
          dsn: $DEEPSOURCE_DSN
          key: python

# Invoke jobs via workflows
# See: https://circleci.com/docs/2.0/configuration-reference/#workflows
workflows:
  CodeTests:
    jobs:
      - unittests-python:
          matrix:
            parameters:
              python-version: ["3.8", "3.9", "3.10"]
